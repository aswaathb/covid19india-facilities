{"version":3,"sources":["icons/user.svg","icons sync /^/.//.*/.svg$","icons/ambulance.svg","icons/delivery.svg","icons/fire.svg","icons/food.svg","icons/fund.svg","icons/helpline.svg","icons/homes.svg","icons/hospital.svg","icons/icon.svg","icons/kitchen.svg","icons/lab.svg","icons/mental-health.svg","icons/null.svg","icons/other.svg","icons/police.svg","icons/quarantine.svg","icons/seniors.svg","icons/thali.svg","icons/transport.svg","icons/unknown.svg","components/geosearch.js","components/mapchart.js","components/navigate.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","search","Search","this","props","leaflet","searchControl","ELG","addTo","results","L","LayerGroup","on","data","clearLayers","latlng","addLayer","marker","Component","withLeaflet","BaseLayer","LayersControl","user","Icon","iconUrl","require","iconRetinaUrl","iconSize","createClusterCustomIcon","cluster","divIcon","html","getChildCount","className","point","medFilter","feature","properties","priority","othersFilter","getDistance","p1","p2","phi1","Math","PI","phi2","dLambda","d","acos","sin","cos","Number","toFixed","generateIcon","result","layer","icon","MapChart","useState","geoData","setGeoData","useEffect","getJSON","medKnn","restKnn","panKnn","axios","get","then","response","catch","error","console","log","center","currentLocation","userLocation","Knn","geoJSON","filter","nearestLayer","features","feat","state","includes","userState","name","type","i","length","push","geometry","coordinates","desc","addr","phone","contact","dist","reverse","recordid","j","k","Map","zoom","position","checked","TileLayer","attribution","url","detectRetina","searchMap","Marker","key","Popup","showCoverageOnHover","maxClusterRadius","spiderfyDistanceMultiplier","iconCreateFunction","href","target","Essentials","setCurrentLocation","currentAddress","setCurrentAddress","currentState","setCurrentState","getCurrentAddress","lat","lng","locality","principalSubdivision","err","style","animationDelay","onClick","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","searchHandler"],"mappings":"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","file":"static/js/Navigate.1dc95f5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.c0697d5d.svg\";","var map = {\n\t\"./ambulance.svg\": 444,\n\t\"./delivery.svg\": 445,\n\t\"./fire.svg\": 446,\n\t\"./food.svg\": 447,\n\t\"./fund.svg\": 448,\n\t\"./helpline.svg\": 449,\n\t\"./homes.svg\": 450,\n\t\"./hospital.svg\": 451,\n\t\"./icon.svg\": 452,\n\t\"./kitchen.svg\": 453,\n\t\"./lab.svg\": 454,\n\t\"./mental-health.svg\": 455,\n\t\"./null.svg\": 456,\n\t\"./other.svg\": 457,\n\t\"./police.svg\": 458,\n\t\"./quarantine.svg\": 459,\n\t\"./seniors.svg\": 460,\n\t\"./thali.svg\": 461,\n\t\"./transport.svg\": 462,\n\t\"./unknown.svg\": 463,\n\t\"./user.svg\": 244\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 310;","module.exports = __webpack_public_path__ + \"static/media/ambulance.4ce9786b.svg\";","module.exports = __webpack_public_path__ + \"static/media/delivery.166a768b.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.d2b09926.svg\";","module.exports = __webpack_public_path__ + \"static/media/food.a50b1884.svg\";","module.exports = __webpack_public_path__ + \"static/media/fund.89e35ddb.svg\";","module.exports = __webpack_public_path__ + \"static/media/helpline.d2d04866.svg\";","module.exports = __webpack_public_path__ + \"static/media/homes.5d26365e.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital.ee786d76.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.b81318db.svg\";","module.exports = __webpack_public_path__ + \"static/media/kitchen.5e0b972b.svg\";","module.exports = __webpack_public_path__ + \"static/media/lab.1ce20326.svg\";","module.exports = __webpack_public_path__ + \"static/media/mental-health.a2cd38bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/null.3d0c5526.svg\";","module.exports = __webpack_public_path__ + \"static/media/other.2590c4f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/police.d30a8b2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/quarantine.34caf26f.svg\";","module.exports = __webpack_public_path__ + \"static/media/seniors.f0ae6c8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/thali.04767274.svg\";","module.exports = __webpack_public_path__ + \"static/media/transport.17903b62.svg\";","module.exports = __webpack_public_path__ + \"static/media/unknown.3d0c5526.svg\";","import { Component } from \"react\";\nimport L from \"leaflet\";\nimport * as ELG from \"esri-leaflet-geocoder\";\nimport { withLeaflet } from \"react-leaflet\";\nlet search=null;\nclass Search extends Component {\n\n  componentDidMount() {\n    const map = this.props.leaflet.map;\n    const searchControl = new ELG.Geosearch().addTo(map);\n    const results = new L.LayerGroup().addTo(map);\n    searchControl.on(\"results\", function(data) {\n      results.clearLayers();\n      if(data.results[0]){\n      search(data.results[0].latlng)\n        results.addLayer(L.marker(data.results[0].latlng));}\n\n    });\n  }\n\n  render() {\n   search= this.props.search;\n    return null;\n  }\n}\n//export default Search;\nexport default withLeaflet(Search);","import Search from './geosearch';\n\nimport axios from 'axios';\nimport L from 'leaflet';\nimport * as Knn from 'leaflet-knn';\nimport React, {useState, useEffect} from 'react';\nimport * as Icons from 'react-feather';\nimport {\n  Map,\n  Marker,\n  Popup,\n  TileLayer,\n  LayerGroup,\n  LayersControl,\n} from 'react-leaflet';\n// import {Sidebar, Tab}  from 'react-leaflet-sidebarv2';\n// import 'leaflet-sidebar-v2/css/leaflet-sidebar.css'; // TODO:Import just the .min.css instead of the whole package :|\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\n// import { Sidebar, Tab } from 'react-leaflet-sidetabs'\nimport 'leaflet/dist/leaflet.css';\n\nconst {BaseLayer} = LayersControl;\n\nconst user = new L.Icon({\n  iconUrl: require('../icons/user.svg'),\n  iconRetinaUrl: require('../icons/user.svg'),\n  iconSize: [40, 40],\n});\n\nconst createClusterCustomIcon = function (cluster) {\n  return L.divIcon({\n    html: cluster.getChildCount(),\n    className: 'marker-cluster-custom',\n    iconSize: L.point(30, 30, true),\n  });\n};\n\nfunction medFilter(feature) {\n  return feature.properties.priority;\n}\nfunction othersFilter(feature) {\n  return !feature.properties.priority;\n}\n\nfunction getDistance(p1, p2) {\n  // p1 and p2 => [lat1, long1], [lat2, long2]\n  const phi1 = (p1[0] * Math.PI) / 180;\n  const phi2 = (p2[0] * Math.PI) / 180;\n  const dLambda = ((p2[1] - p1[1]) * Math.PI) / 180;\n  const R = 6371e3;\n  const d =\n    Math.acos(\n      Math.sin(phi1) * Math.sin(phi2) +\n        Math.cos(phi1) * Math.cos(phi2) * Math.cos(dLambda)\n    ) * R;\n  return Number((d / 1000).toFixed(2));\n}\n\nfunction generateIcon(result) {\n  return new L.Icon({\n    iconUrl: require('../icons/' +\n      result.layer.feature.properties.icon +\n      '.svg'),\n    iconRetinaUrl: require('../icons/' +\n      result.layer.feature.properties.icon +\n      '.svg'),\n    iconSize: [25, 25],\n  });\n}\n\nexport default function MapChart(props) {\n  const [geoData, setGeoData] = useState([]);\n\n  // const [collapsed, setCollapsed] = useState(true);\n  // const [selected, setSelected] = useState('home');\n  // super(props);\n  //   this.state = {\n  //     collapsed: false,\n  //     selected: 'home',\n  //   };\n\n  // function onClose() {\n  //   setCollapsed( true );\n  // }\n  // function onOpen(id) {\n  //   setSelected(id);\n  //   setCollapsed(false);\n  // }\n\n  useEffect(() => {\n    getJSON();\n  }, []);\n\n  // Get processed data from forked repo until its pushed to API\n  const getJSON = () => {\n    axios\n      .get('https://api.covid19india.org/resources/geoResources.json')\n      .then((response) => {\n        setGeoData(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const center = props.currentLocation || [21.3041, 77.1025];\n  const zoom = 5;\n  let medKnn;\n  let restKnn;\n  let panKnn;\n\n  const userLocation = props.currentLocation;\n  const hK = 5; // Finds the K nearest hospitals/labs wrt user location\n  const rK = 50; // Finds the K nearest essentials wrt user location\n  const rad = 100 * 1000; // Max distance of the K points, in meters\n\n  if (userLocation) {\n    medKnn = new Knn(L.geoJSON(geoData, {filter: medFilter})).nearestLayer(\n      [userLocation[1], userLocation[0]],\n      hK\n    );\n    restKnn = new Knn(L.geoJSON(geoData, {filter: othersFilter})).nearestLayer(\n      [userLocation[1], userLocation[0]],\n      rK,\n      rad\n    );\n    panKnn = geoData?.features?.filter(\n      (feat) =>\n        feat.properties.state === 'PAN India' ||\n        (feat.properties.state.includes('PAN') &&\n          feat.properties.state.includes(props.userState))\n    );\n  }\n\n  const results = {\n    name: 'NearestK-Essentials',\n    type: 'FeatureCollection',\n    features: [],\n  };\n\n  if (medKnn) {\n    let i = 0;\n    for (i = 0; i < medKnn.length; i++) {\n      results.features.push({\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: medKnn[i].layer.feature.geometry.coordinates,\n        },\n        properties: {\n          name: medKnn[i].layer.feature.properties.name,\n          desc: medKnn[i].layer.feature.properties.desc,\n          addr: medKnn[i].layer.feature.properties.addr,\n          phone: medKnn[i].layer.feature.properties.phone,\n          contact: medKnn[i].layer.feature.properties.contact,\n          dist: getDistance(\n            userLocation,\n            medKnn[i].layer.feature.geometry.coordinates.reverse()\n          ),\n          icon: generateIcon(medKnn[i]),\n          recordid: medKnn[i].layer.feature.properties.recordid,\n        },\n      });\n    }\n  }\n\n  if (restKnn) {\n    let j = 0;\n    for (j = 0; j < restKnn.length; j++) {\n      results.features.push({\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: restKnn[j].layer.feature.geometry.coordinates,\n        },\n        properties: {\n          name: restKnn[j].layer.feature.properties.name,\n          desc: restKnn[j].layer.feature.properties.desc,\n          addr: restKnn[j].layer.feature.properties.addr,\n          phone: restKnn[j].layer.feature.properties.phone,\n          contact: restKnn[j].layer.feature.properties.contact,\n          dist: getDistance(\n            userLocation,\n            restKnn[j].layer.feature.geometry.coordinates.reverse()\n          ),\n          icon: generateIcon(restKnn[j]),\n          recordid: restKnn[j].layer.feature.properties.recordid,\n        },\n      });\n    }\n  }\n\n  if (panKnn) {\n    let k = 0;\n    for (k = 0; k < panKnn.length; k++) {\n      results.features.push(panKnn[k]);\n    }\n  }\n\n  return (\n    <div>\n      {/* <Sidebar\n        id=\"sidebar\"\n        position=\"right\"\n        collapsed={collapsed}\n        closeIcon={<Icons.XCircle/>}\n        selected={selected}\n        // onOpen={onOpen(this.id)}\n        onClose={onClose()}\n      >\n          <Tab id=\"home\" header=\"Home\" icon={<Icons.Home /> } >\n          <p>No place like home!</p>\n          </Tab>\n          <Tab id=\"search\" header=\"Search\" icon={<Icons.Search />} >\n          <p>The noblest search is the search for excellence!</p>\n          </Tab>\n          <Tab id=\"settings\" header=\"Settings\" anchor=\"bottom\" icon={<Icons.Settings />} >\n          <p>We don't want privacy so much as privacy settings!</p>\n          </Tab>           \n      </Sidebar> */}\n\n      <Map\n        center={center}\n        zoom={zoom}\n        // minZoom={5}\n        // maxZoom={20}\n      >\n        <LayersControl position=\"topright\">\n          <BaseLayer checked name=\"Light Mode\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png\" // != DarkMode\n              detectRetina={true}\n            />\n          </BaseLayer>\n          <BaseLayer name=\"Dark Mode\">\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\" // == DarkMode\n              detectRetina={true}\n            />\n          </BaseLayer>\n        </LayersControl>\n\n        <Search search={props.searchMap} />\n        {props.currentLocation && (\n          <Marker position={props.currentLocation} icon={user} key=\"userLoc\">\n            <Popup>\n              <h2>Your current location</h2>\n              {/* {results?.features\n                .filter((feature) => {\n                  return (\n                    // Object.keys(categories)\n                    //   .filter(\n                    //     (categoryName) => categories[categoryName].isSelected === true\n                    //   )\n                    //   .includes(feature.properties.icon) && \n                    !feature.properties.dist\n                  );\n                })\n                .map( p => (\n                  <p key={p.properties.id} >\n                  <a href={p.properties.contact}>{p.properties.name}</a> <br/>\n                  {p.properties.desc} <br/>\n                  {p.properties.phone}\n                  </p>\n                ))} */}\n            </Popup>\n          </Marker>\n        )}\n\n        <LayerGroup>\n          <MarkerClusterGroup\n            showCoverageOnHover={true}\n            maxClusterRadius={10}\n            spiderfyDistanceMultiplier={2}\n            iconCreateFunction={createClusterCustomIcon}\n          >\n            {results?.features\n              .filter((feature) => {\n                return (\n                  // Object.keys(categories)\n                  //   .filter(\n                  //     (categoryName) => categories[categoryName].isSelected === true\n                  //   )\n                  //   .includes(feature.properties.icon) &&\n                  feature.properties.dist\n                );\n              })\n              .map((d) => (\n                <Marker\n                  key={d.properties.id}\n                  position={d.geometry.coordinates}\n                  icon={d.properties.icon}\n                >\n                  <Popup className=\"custom-popup\">\n                    <div>\n                      <a href={d.properties.contact} target=\"_noblank\">\n                        <h2>\n                          {d.properties.name} {'  '}\n                          <Icons.ExternalLink />\n                        </h2>\n                      </a>\n                      <p>\n                        <b>Description:</b> {d.properties.desc}\n                        <br />\n                        <b>Address:</b> {d.properties.addr}\n                        {d.properties.phone ? (\n                          <>\n                            <br />\n                            <b>Phone:</b> {d.properties.phone}\n                            <br />{' '}\n                          </>\n                        ) : null}\n                        {d.properties.dist} km away from your location\n                      </p>\n                    </div>\n                  </Popup>\n                </Marker>\n              ))}\n          </MarkerClusterGroup>\n        </LayerGroup>\n      </Map>\n    </div>\n  );\n}\n","import MapChart from './mapchart';\n\nimport axios from 'axios';\nimport React, {\n  useState,\n  // ,useEffect\n} from 'react';\n// import ContentLoader from 'react-content-loader';\nimport * as Icon from 'react-feather';\n// import {useMeasure} from 'react-use';\n\nconst Essentials = (props) => {\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [currentAddress, setCurrentAddress] = useState(null);\n  const [currentState, setCurrentState] = useState(null);\n  // let reset = false;\n\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      setCurrentLocation([position.coords.latitude, position.coords.longitude]);\n      getCurrentAddress(position.coords.latitude, position.coords.longitude);\n    });\n  };\n\n  const searchHandler = (data) => {\n    // reset=false;\n    setCurrentLocation([data.lat, data.lng]);\n  };\n\n  const getCurrentAddress = (lat, lng) => {\n    try {\n      axios\n        .get(\n          'https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=' +\n            lat +\n            '&longitude=' +\n            lng +\n            '&localityLanguage=en'\n        )\n        .then((response) => {\n          setCurrentAddress(response.data.locality);\n          setCurrentState(response.data.principalSubdivision);\n        });\n    } catch (err) {\n      console.log(err);\n      setCurrentAddress('Error fetching name of your location');\n      setCurrentState(null);\n    }\n  };\n\n  return (\n    <div className=\"Essentials\">\n      <div className=\"tracker_bar\">\n        <div\n          className=\"button\"\n          style={{animationDelay: '0.9s'}}\n          onClick={() => getLocation()}\n        >\n          {currentAddress ? (\n            <>\n              <h3>{currentAddress + ', ' + currentState}</h3>\n            </>\n          ) : (\n            <>\n              <Icon.MapPin />\n              <h3>View nearby hospitals treating Covid-19</h3>\n            </>\n          )}\n        </div>\n\n        <div>\n          <MapChart\n            searchMap={(data) => searchHandler(data)}\n            currentLocation={currentLocation}\n            userState={currentState}\n            className=\"leaflet-container\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Essentials;\n"],"sourceRoot":""}