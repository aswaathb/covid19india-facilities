{"version":3,"sources":["components/timeline.js","components/updates.js","components/actions.js","components/search.js","components/row.js","components/table.js","hooks/usestickyswr.js","components/home.js"],"names":["React","memo","setIsTimelineMode","setDate","dates","useMeasure","timelineElement","width","useState","index","setIndex","useSprings","length","i","x","color","opacity","config","stiff","springs","set","bind","useDrag","down","xDelta","delta","xDir","direction","distance","cancel","clampedIndex","getClampedIndex","setClampedDate","hideTimeline","setSprings","clamp","display","handleKeyPress","useKeyPressEvent","setTimeout","getDate","format","Date","timeline","transition","useTransition","hasOwnProperty","from","transform","enter","leave","handleClick","Fragment","map","item","key","props","h5","className","style","ref","filter","div","interpolate","onClick","newDate","currentDate","Updates","updates","useLayoutEffect","slice","reverse","activity","update","replace","activityDate","timestamp","formatDistance","dangerouslySetInnerHTML","__html","showUpdates","setShowUpdates","useLocalStorage","newUpdate","setNewUpdate","lastViewedLog","setLastViewedLog","isTimelineMode","useSWR","fetcher","revalidateOnFocus","data","useEffect","undefined","lastTimestamp","minHeight","prevProps","currProps","ActionsPanel","Bell","useMemo","BellOff","TimelineIcon","xmlns","viewBox","height","fillRule","d","useSpring","mass","tension","friction","trail","useTrail","to","o","pointerEvents","utcToZonedTime","parse","getTimeFromMilliseconds","t","engine","Bloodhound","initialize","local","STATE_CODES_ARRAY","queryTokenizer","tokenizers","whitespace","datumTokenizer","obj","districtEngine","limit","indexRemote","remote","url","response","districts","Object","keys","stateName","districtData","districtName","push","district","state","essentialsEngine","resources","essentialSuggestions","locationSuggestions","searchValue","setSearchValue","expand","setExpand","results","setResults","searchInput","useRef","useTranslation","handleSearch","useCallback","essentialsSync","datums","result","essentialsObj","name","nameoftheorganisation","type","category","website","contact","description","descriptionandorserviceprovided","city","phonenumber","search","stateObj","route","code","districtObj","STATE_CODES","setNativeValue","element","value","valueSetter","getOwnPropertyDescriptor","prototype","getPrototypeOf","prototypeValueSetter","call","useDebounce","produce","draftResults","splice","label","onFocus","event","onBlur","onChange","target","id","STATE_NAMES","size","href","capitalize","ESSENTIALS_CATEGORIES","split","onMouseDown","preventDefault","current","dispatchEvent","Event","bubbles","suggestion","useBreakpoint","createBreakpoint","L","S","Cell","statistic","total","getStatistic","spring","gentle","span","classnames","formatNumber","Math","floor","equal","DistrictHeaderCell","handleSortClick","sortData","breakpoint","title","abbreviate","sortColumn","isAscending","DistrictRow","stateCode","regionHighlighted","setRegionHighlighted","highlightDistrict","draftRegionHighlighted","onMouseEnter","meta","notes","aria-label","wrap","noDelay","e","stopPropagation","PRIMARY_STATISTICS","showDistricts","setShowDistricts","setSortData","history","useHistory","Chevron","rotateRightDown","rotateDownRight","draftSortData","sortingFunction","districtNameA","districtNameB","localeCompare","highlightState","_setShowDistrict","colSpan","paddingBottom","formatLastUpdated","last_updated","align","sort","a","b","XL","StateHeaderCell","handleSort","FineprintTop","stateCodeA","stateCodeB","statisticA","statisticB","wobbly","table","confirmed","useStickySWR","swrOptions","options","setOptions","args","isValidating","error","rest","useUpdateEffect","draftOptions","initialData","Home","anchor","setAnchor","mapStatistic","setMapStatistic","date","timeseries","revalidateOnMount","refreshInterval","homeRightElement","isVisible","useIsVisible","once","stateCodes","Set","MAP_META","Helmet","content"],"mappings":"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","file":"static/js/Home.5fa37ff9.chunk.js","sourcesContent":["import {format} from 'date-fns';\nimport clamp from 'lodash/clamp';\nimport React, {useState} from 'react';\nimport {useSprings, useTransition, animated, config} from 'react-spring';\nimport {useMeasure, useKeyPressEvent} from 'react-use';\nimport {useDrag} from 'react-use-gesture';\n\nconst Timeline = ({setIsTimelineMode, setDate, dates}) => {\n  const [timelineElement, {width}] = useMeasure();\n  const [index, setIndex] = useState(0);\n\n  const [springs, set] = useSprings(\n    dates.length,\n    (i) => ({\n      x: (index - i) * (480 / 3) + 480 / 2 - 35,\n      color: i === 0 ? '#6c757d' : '#6c757d99',\n      opacity: i < 2 ? 1 : 0,\n    }),\n    config.stiff\n  );\n\n  const bind = useDrag(\n    ({down, delta: [xDelta], direction: [xDir], distance, cancel}) => {\n      const clampedIndex = getClampedIndex(xDir);\n      if (down && distance > 25) {\n        cancel(setIndex(clampedIndex));\n        setClampedDate(clampedIndex);\n      }\n\n      if (index === 0 && xDir < 0) {\n        hideTimeline();\n      }\n\n      setSprings({clampedIndex: index, xDir, down, xDelta});\n    }\n  );\n\n  const getClampedIndex = (direction) => {\n    return clamp(index + (direction > 0 ? 1 : -1), 0, dates.length - 1);\n  };\n\n  const setSprings = ({direction, clampedIndex, down, xDelta}) => {\n    set((i) => {\n      if (i < clampedIndex - 1) {\n        return {x: width, color: '#6c757d99', opacity: 0, display: 'none'};\n      } else if (i > clampedIndex + 1) {\n        return {x: -40, color: '#6c757d99', opacity: 0, display: 'none'};\n      }\n\n      let x = 0;\n      if (xDelta) {\n        x =\n          (clampedIndex - i) * (width / 3) +\n          width / 2 -\n          35 +\n          (down ? xDelta : 0);\n      } else {\n        x = (clampedIndex - i) * (width / 3) + width / 3 + 45;\n      }\n\n      if (i === clampedIndex) {\n        return {x, color: '#6c757d', display: 'block'};\n      }\n      return {x, color: '#6c757d99', opacity: 1, display: 'block'};\n    });\n  };\n\n  const handleKeyPress = (direction) => {\n    if (index < dates.length) {\n      const clampedIndex = getClampedIndex(direction);\n      setSprings({direction, clampedIndex});\n      setIndex(clampedIndex);\n      setClampedDate(clampedIndex);\n    }\n    if (index === 1 && direction === -1) {\n      hideTimeline();\n    }\n  };\n\n  useKeyPressEvent('ArrowLeft', () => {\n    handleKeyPress(1);\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    handleKeyPress(-1);\n  });\n\n  useKeyPressEvent('Escape', () => {\n    setIsTimelineMode(false);\n    setDate('');\n  });\n\n  const hideTimeline = () => {\n    setTimeout(() => {\n      setIsTimelineMode(false);\n    }, 1000);\n  };\n\n  const getDate = (index) => {\n    if (index === 0) return 'Today';\n    return format(new Date(dates[index]), 'dd MMM');\n  };\n\n  const setClampedDate = (clampedIndex) => {\n    if (clampedIndex === 0) {\n      setDate('');\n    } else {\n      setDate(dates[clampedIndex]);\n    }\n  };\n\n  const timeline = {\n    '2020-03-25': 'Beginning of Lockdown Phase 1',\n    '2020-04-14': 'End of Lockdown Phase 1',\n    '2020-04-15': 'Beginning of Lockdown Phase 2',\n    '2020-05-03': 'End of Lockdown Phase 2',\n    '2020-04-04': 'Beginning of Lockdown Phase 3',\n    '2020-04-17': 'End of Lockdown Phase 3',\n    '2020-05-18': 'Beginning of Lockdown Phase 4',\n    '2020-05-31': 'End of Lockdown Phase 4',\n    '2020-06-01': 'Beginning of Lockdown Phase 5',\n  };\n\n  const transition = useTransition(\n    timeline.hasOwnProperty(dates[index]),\n    null,\n    {\n      from: {transform: 'translate3d(0, 20px, 0)', opacity: 0},\n      enter: {transform: 'translate3d(0, 0px, 0)', opacity: 1},\n      leave: {transform: 'translate3d(0, 20px, 0)', opacity: 0},\n    }\n  );\n\n  const handleClick = (clampedIndex) => {\n    if (clampedIndex > index) {\n      handleKeyPress(+1);\n    } else {\n      handleKeyPress(-1);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {transition.map(\n        ({item, key, props}) =>\n          item && (\n            <animated.h5 className=\"highlight\" key={key} style={props}>\n              {timeline[dates[index]]}\n            </animated.h5>\n          )\n      )}\n\n      <div className=\"Timeline\" ref={timelineElement} {...bind()}>\n        {springs\n          .filter(\n            ({opacity}, i) =>\n              i < dates.length &&\n              (i === index + 1 ||\n                i === index - 1 ||\n                i === index + 2 ||\n                i === index - 2 ||\n                i === index)\n          )\n          .map(({x, color, opacity, display}, i) => (\n            <animated.div\n              className=\"day\"\n              key={i}\n              style={{\n                transform: x.interpolate((x) => `translate3d(${x}px,0,0)`),\n                opacity,\n                display,\n              }}\n            >\n              {index < 2 && (\n                <animated.h5\n                  style={{color}}\n                  onClick={() => {\n                    handleClick(i);\n                  }}\n                >\n                  {getDate(i)}\n                </animated.h5>\n              )}\n              {index > 1 && index < dates.length && (\n                <animated.h5\n                  style={{color}}\n                  onClick={() => {\n                    handleClick(index + i - 2);\n                  }}\n                >\n                  {getDate(index + i - 2)}\n                </animated.h5>\n              )}\n            </animated.div>\n          ))}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Timeline);\n","import {formatDistance, format} from 'date-fns';\nimport React, {useLayoutEffect} from 'react';\n\nconst newDate = new Date();\nlet currentDate = newDate;\n\nfunction Updates({updates}) {\n  useLayoutEffect(() => {\n    currentDate = newDate;\n  });\n\n  return (\n    <div className=\"updates\">\n      <div className=\"updates-header\">\n        <h2>{format(currentDate, 'd MMM')}</h2>\n      </div>\n\n      {updates\n        .slice(-5)\n        .reverse()\n        .map(function (activity, index) {\n          activity.update = activity.update.replace(/\\n/g, '<br/>');\n          const activityDate = new Date(activity.timestamp * 1000);\n          const addHeader = () => {\n            currentDate = activityDate;\n\n            return (\n              <React.Fragment>\n                {index === 0 ? (\n                  <div className=\"update\">\n                    <h4>No updates yet!</h4>\n                  </div>\n                ) : (\n                  ''\n                )}\n                <div className=\"updates-header\">\n                  <h2>{format(activityDate, 'd MMM')}</h2>\n                </div>\n              </React.Fragment>\n            );\n          };\n\n          return (\n            <React.Fragment key={index}>\n              {activityDate.getDate() !== currentDate.getDate()\n                ? addHeader()\n                : ' '}\n              <div key={index} className=\"update\">\n                <h5>\n                  {formatDistance(\n                    new Date(activity.timestamp * 1000),\n                    new Date()\n                  ) + ' ago'}\n                </h5>\n                <h4\n                  dangerouslySetInnerHTML={{\n                    __html: activity.update,\n                  }}\n                ></h4>\n              </div>\n            </React.Fragment>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default Updates;\n","import Timeline from './timeline';\nimport Updates from './updates';\n\nimport {fetcher} from '../utils/commonfunctions';\n\nimport {parse, format} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport React, {useMemo, useState, useEffect} from 'react';\nimport * as Icon from 'react-feather';\nimport {useSpring, animated, useTrail, config} from 'react-spring';\nimport {useLocalStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst Actions = ({setDate, dates}) => {\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', 0);\n  const [isTimelineMode, setIsTimelineMode] = useState(false);\n\n  const {data: updates} = useSWR(\n    'https://api.covid19india.org/updatelog/log.json',\n    fetcher,\n    {\n      revalidateOnFocus: false,\n    }\n  );\n\n  useEffect(() => {\n    if (updates !== undefined) {\n      const lastTimestamp = updates.slice().reverse()[0].timestamp * 1000;\n      if (lastTimestamp !== lastViewedLog) {\n        setNewUpdate(true);\n        setLastViewedLog(lastTimestamp);\n      }\n    }\n  }, [lastViewedLog, updates, setLastViewedLog, setNewUpdate]);\n\n  return (\n    <React.Fragment>\n      {!updates && <div style={{minHeight: '5rem'}} />}\n\n      {updates && (\n        <ActionsPanel\n          {...{\n            lastViewedLog,\n            newUpdate,\n            isTimelineMode,\n            setIsTimelineMode,\n            showUpdates,\n            setDate,\n            dates,\n            setNewUpdate,\n            setShowUpdates,\n          }}\n        />\n      )}\n\n      {showUpdates && <Updates {...{updates}} />}\n    </React.Fragment>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  return true;\n};\n\nexport default React.memo(Actions, isEqual);\n\nconst ActionsPanel = ({\n  lastViewedLog,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates,\n}) => {\n  const Bell = useMemo(\n    () => (\n      <Icon.Bell\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n          setNewUpdate(false);\n        }}\n      />\n    ),\n    [setNewUpdate, setShowUpdates, showUpdates]\n  );\n\n  const BellOff = useMemo(\n    () => (\n      <Icon.BellOff\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n        }}\n      />\n    ),\n    [setShowUpdates, showUpdates]\n  );\n\n  const TimelineIcon = useMemo(\n    () => (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"-.2 -.2 17 17\"\n        width=\"16\"\n        height=\"16\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M1.643 3.143L.427 1.927A.25.25 0 000 2.104V5.75c0 \n          .138.112.25.25.25h3.646a.25.25 0 00.177-.427L2.715 \n          4.215a6.5 6.5 0 11-1.18 4.458.75.75 0 10-1.493.154 \n          8.001 8.001 0 101.6-5.684zM7.75 4a.75.75 0 \n          01.75.75v2.992l2.028.812a.75.75 0 01-.557 \n          1.392l-2.5-1A.75.75 0 017 8.25v-3.5A.75.75 \n          0 017.75 4z\"\n        ></path>\n      </svg>\n    ),\n    []\n  );\n\n  const {transform, opacity} = useSpring({\n    opacity: isTimelineMode ? 1 : 0,\n    transform: `perspective(600px) rotateX(${isTimelineMode ? 180 : 0}deg)`,\n    config: {mass: 5, tension: 500, friction: 80},\n  });\n\n  const trail = useTrail(3, {\n    from: {transform: 'translate3d(0, 10px, 0)', opacity: 0},\n    to: {\n      transform: 'translate3d(0, 0px, 0)',\n      opacity: 1,\n    },\n    config: config.stiff,\n  });\n\n  const getTimeFromMilliseconds = (lastViewedLog) => {\n    return format(\n      utcToZonedTime(parse(lastViewedLog, 'T', new Date()), 'Asia/Kolkata'),\n      'dd MMM, p'\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <animated.div\n        className=\"actions\"\n        style={{\n          opacity: opacity.interpolate((o) => 1 - o),\n          transform,\n          pointerEvents: isTimelineMode ? 'none' : '',\n        }}\n      >\n        <animated.h5 style={trail[0]}>{`${getTimeFromMilliseconds(\n          lastViewedLog\n        )} IST`}</animated.h5>\n\n        {!showUpdates && (\n          <animated.div className=\"bell-icon\" style={trail[1]}>\n            {Bell}\n            {newUpdate && <div className=\"indicator\"></div>}\n          </animated.div>\n        )}\n\n        {showUpdates && BellOff}\n        <animated.div\n          className=\"timeline-icon\"\n          onClick={() => {\n            setIsTimelineMode(true);\n            if (showUpdates) setShowUpdates(!showUpdates);\n          }}\n          style={trail[2]}\n        >\n          {TimelineIcon}\n        </animated.div>\n      </animated.div>\n\n      <animated.div\n        className=\"actions timeline\"\n        style={{\n          opacity,\n          transform: transform.interpolate((t) => `${t} rotateX(180deg)`),\n          pointerEvents: !isTimelineMode ? 'none' : '',\n        }}\n      >\n        {isTimelineMode && (\n          <Timeline {...{setIsTimelineMode, setDate, dates}} />\n        )}\n      </animated.div>\n    </React.Fragment>\n  );\n};\n","import {\n  STATE_CODES_ARRAY,\n  STATE_CODES,\n  STATE_NAMES,\n  ESSENTIALS_CATEGORIES,\n} from '../constants';\nimport {capitalize} from '../utils/commonfunctions';\n\nimport Bloodhound from 'corejs-typeahead';\nimport produce from 'immer';\nimport React, {useState, useCallback, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTrail, animated, config} from 'react-spring';\nimport {useDebounce} from 'react-use';\n\nconst engine = new Bloodhound({\n  initialize: true,\n  local: STATE_CODES_ARRAY,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\n});\n\nconst districtEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/state_district_wise.json',\n    transform: function (response) {\n      const districts = [];\n      Object.keys(response).map((stateName) => {\n        const districtData = response[stateName].districtData;\n        Object.keys(districtData).map((districtName) => {\n          return districts.push({district: districtName, state: stateName});\n        });\n        return null;\n      });\n      return districts;\n    },\n  },\n});\n\nconst essentialsEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\n    'category',\n    'city',\n    'contact',\n    'descriptionandorserviceprovided',\n    'nameoftheorganisation',\n    'state'\n  ),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/resources/resources.json',\n    transform: function (response) {\n      return response.resources;\n    },\n  },\n});\n\n/* let focused = false;\nconst suggestions = [\n  'Karnataka',\n  'West Bengal',\n  'Alappuzha',\n  'Senior citizen support bangalore',\n  'Community Kitchen in Kerala',\n  'Groceries Chennai',\n];*/\n\nconst essentialSuggestions = [\n  'Testing Pune',\n  'Delhi Shelter',\n  'Community Kitchen in Kerala',\n  'Groceries Chennai',\n  'Senior citizen support bangalore',\n];\nconst locationSuggestions = [\n  'Mumbai',\n  'Karnataka',\n  'Chennai',\n  'Alappuzha',\n  'Ganjam',\n];\n\nfunction Search() {\n  const [searchValue, setSearchValue] = useState('');\n  const [expand, setExpand] = useState(false);\n  const [results, setResults] = useState([]);\n  const searchInput = useRef(null);\n  const {t} = useTranslation();\n\n  const handleSearch = useCallback((searchInput) => {\n    const results = [];\n\n    const sync = (datums) => {\n      datums.map((result, index) => {\n        const stateObj = {\n          name: result.name,\n          type: 'state',\n          route: result.code,\n        };\n        results.push(stateObj);\n        return null;\n      });\n    };\n\n    const districtSync = (datums) => {\n      datums.slice(0, 3).map((result, index) => {\n        const districtObj = {\n          name: result.district,\n          type: 'district',\n          route: STATE_CODES[result.state],\n        };\n        results.push(districtObj);\n        return null;\n      });\n    };\n\n    const essentialsSync = (datums) => {\n      datums.slice(0, 5).map((result, index) => {\n        const essentialsObj = {\n          name: result.nameoftheorganisation,\n          type: 'essentials',\n          category: result.category,\n          website: result.contact,\n          description: result.descriptionandorserviceprovided,\n          city: result.city,\n          state: result.state,\n          contact: result.phonenumber,\n        };\n        results.push(essentialsObj);\n        return null;\n      });\n      setResults([...results]);\n    };\n\n    const essentialsAsync = (datums) => {\n      // to handle async remote call on initial launch\n      essentialsEngine.search(searchInput, essentialsSync);\n    };\n\n    engine.search(searchInput, sync);\n    districtEngine.search(searchInput, districtSync);\n    essentialsEngine.search(searchInput, essentialsSync, essentialsAsync);\n  }, []);\n\n  useDebounce(\n    () => {\n      if (searchValue) {\n        handleSearch(searchValue);\n      } else {\n        setResults(\n          produce(results, (draftResults) => {\n            draftResults.splice(0);\n          })\n        );\n      }\n    },\n    100,\n    [searchValue]\n  );\n\n  function setNativeValue(element, value) {\n    const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n    const prototype = Object.getPrototypeOf(element);\n    const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n      prototype,\n      'value'\n    ).set;\n\n    if (valueSetter && valueSetter !== prototypeValueSetter) {\n      prototypeValueSetter.call(element, value);\n    } else {\n      valueSetter.call(element, value);\n    }\n  }\n\n  /* function fillPlaceholder(target, index, cursorPosition, callback) {\n    if (focused) {\n      target.textContent = '';\n      return true;\n    }\n    const text = t(suggestions[index]);\n    const placeholder = target.textContent;\n    target.classList.remove('disappear');\n    target.textContent = placeholder + text[cursorPosition];\n    if (cursorPosition < text.length - 1) {\n      setTimeout(function () {\n        fillPlaceholder(target, index, cursorPosition + 1, callback);\n      }, 200);\n      return true;\n    }\n    callback();\n  }\n\n  function clearPlaceholder(target, callback) {\n    const placeholder = target.textContent;\n    target.classList.add('disappear');\n    if (placeholder.length > 0) {\n      setTimeout(function () {\n        target.textContent = '';\n        clearPlaceholder(target, callback);\n      }, 1000);\n      return true;\n    }\n    callback();\n  }\n\n  function loopThroughSuggestions(target, index) {\n    if (focused) {\n      target.textContent = '';\n      return true;\n    }\n    fillPlaceholder(target, index, 0, function () {\n      setTimeout(function () {\n        clearPlaceholder(target, function () {\n          loopThroughSuggestions(target, (index + 1) % suggestions.length);\n        });\n      }, 2000);\n    });\n  }\n\n  const targetInput = document.getElementById('search-placeholder');\n  if (targetInput) loopThroughSuggestions(targetInput, 0);*/\n\n  const [trail, set] = useTrail(3, () => ({\n    transform: 'translate3d(0, 10px, 0)',\n    opacity: 0,\n    config: config.stiff,\n  }));\n\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n  return (\n    <div className=\"Search\">\n      <animated.label style={trail[0]}>\n        {t('Search your city, resources, etc')}\n      </animated.label>\n      <animated.div className=\"line\" style={trail[1]}></animated.div>\n\n      <animated.div className=\"search-input-wrapper\" style={trail[2]}>\n        <input\n          type=\"text\"\n          value={searchValue}\n          ref={searchInput}\n          onFocus={(event) => {\n            setExpand(true);\n          }}\n          onBlur={() => {\n            setExpand(false);\n          }}\n          onChange={(event) => {\n            setSearchValue(event.target.value);\n          }}\n        />\n        <span id=\"search-placeholder\" className=\"search-placeholder\"></span>\n\n        <div className={`search-button`}>\n          <Icon.Search />\n        </div>\n\n        {searchValue.length > 0 && (\n          <div\n            className={`close-button`}\n            onClick={() => {\n              setSearchValue('');\n              setResults([]);\n            }}\n          >\n            <Icon.X />\n          </div>\n        )}\n      </animated.div>\n\n      {results.length > 0 && (\n        <div className=\"results\">\n          {results.map((result, index) => {\n            if (result.type === 'state' || result.type === 'district') {\n              return (\n                <Link key={index} to={`state/${result.route}`}>\n                  <div className=\"result\">\n                    <div className=\"result-left\">\n                      <div className=\"result-name\">\n                        {`${result.name}`}\n                        {result.type === 'district' &&\n                          `, ${STATE_NAMES[result.route]}`}\n                      </div>\n                    </div>\n                    <div className=\"result-type\">\n                      <span>{[result.route]}</span>\n                      <Icon.ArrowRightCircle size={14} />\n                    </div>\n                  </div>\n                </Link>\n              );\n            } else {\n              return (\n                <a\n                  key={index}\n                  href={result.website || null}\n                  target=\"_noblank\"\n                  className=\"essential-result\"\n                >\n                  <div className=\"result-top\">\n                    <div className=\"result-top-left\">\n                      <div className=\"result-name\">{result.name}</div>\n                      <div className=\"result-location\">\n                        {result.city && `${result.city}, `}\n                        {result.state}\n                      </div>\n                    </div>\n                    <div className=\"result-category\">\n                      <div>\n                        {capitalize(ESSENTIALS_CATEGORIES[result.category])}\n                      </div>\n                      {result.website && <Icon.ExternalLink />}\n                    </div>\n                  </div>\n                  <div className=\"result-description\">{result.description}</div>\n                  <div className=\"result-contacts\">\n                    {result.contact.split('\\n').map((contact) => (\n                      <div key={contact} className=\"result-contact\">\n                        <Icon.Phone />\n                        <a href={`tel:${contact}`}>{contact}</a>\n                      </div>\n                    ))}\n                  </div>\n                </a>\n              );\n            }\n          })}\n        </div>\n      )}\n\n      {expand && (\n        <React.Fragment>\n          <p\n            className=\"feature\"\n            onMouseDown={(event) => {\n              event.preventDefault();\n              setNativeValue(searchInput.current, 'Cyclone Amphan');\n              searchInput.current.dispatchEvent(\n                new Event('input', {bubbles: true})\n              );\n            }}\n          >\n            To those who are in states affected by Cyclone Amphan or have\n            family/friends there, click here to view helplines for assistance.\n          </p>\n          <div className=\"expanded\">\n            <div className=\"expanded-left\">\n              <h3>{t('Essentials')}</h3>\n              <div className=\"suggestions\">\n                {essentialSuggestions.map((suggestion, index) => (\n                  <div className=\"suggestion\" key={index}>\n                    <div>-</div>\n                    <h4\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        setNativeValue(searchInput.current, suggestion);\n                        searchInput.current.dispatchEvent(\n                          new Event('input', {bubbles: true})\n                        );\n                      }}\n                    >\n                      {t(suggestion)}\n                    </h4>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"expanded-right\">\n              <h3>{t('Locations')}</h3>\n              <div className=\"suggestions\">\n                {locationSuggestions.map((suggestion, index) => (\n                  <div className=\"suggestion\" key={index}>\n                    <div>-</div>\n                    <h4\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        setNativeValue(searchInput.current, suggestion);\n                        searchInput.current.dispatchEvent(\n                          new Event('input', {bubbles: true})\n                        );\n                      }}\n                    >\n                      {t(suggestion)}\n                    </h4>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nconst isEqual = () => {\n  return true;\n};\n\nexport default React.memo(Search, isEqual);\n","import {PRIMARY_STATISTICS, STATE_NAMES} from '../constants';\nimport {\n  abbreviate,\n  capitalize,\n  formatLastUpdated,\n  formatNumber,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport Tooltip from '@primer/components/lib/Tooltip';\nimport {\n  InfoIcon,\n  TriangleUpIcon,\n  TriangleDownIcon,\n} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useState, useCallback, useMemo} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useSpring, animated, config} from 'react-spring';\nimport {createBreakpoint, useLocalStorage} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({L: 768, S: 350});\n\nfunction PureCell({statistic, data}) {\n  const total = getStatistic(data, 'total', statistic);\n  const delta = getStatistic(data, 'delta', statistic);\n\n  const spring = useSpring(\n    {\n      total: total,\n      delta: delta,\n      from: {\n        total: total,\n        delta: delta,\n      },\n    },\n    config.gentle\n  );\n\n  return (\n    <td>\n      {statistic !== 'active' && (\n        <animated.span className={classnames('delta', `is-${statistic}`)}>\n          {spring.delta.interpolate((delta) =>\n            delta > 0 ? '\\u2191' + formatNumber(Math.floor(delta)) : ''\n          )}\n        </animated.span>\n      )}\n      <animated.span className=\"total\">\n        {spring.total.interpolate((total) => formatNumber(Math.floor(total)))}\n      </animated.span>\n    </td>\n  );\n}\n\nconst isCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data.total, currProps.data.total)) {\n    return false;\n  }\n  if (!equal(prevProps.data.delta, currProps.data.delta)) {\n    return false;\n  }\n  return true;\n};\n\nconst Cell = React.memo(PureCell, isCellEqual);\n\nfunction DistrictHeaderCell({handleSortClick, statistic, sortData}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <td onClick={() => handleSortClick(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={capitalize(statistic)}\n        >\n          {breakpoint === 'S'\n            ? capitalize(statistic.slice(0, 1))\n            : breakpoint === 'L'\n            ? capitalize(abbreviate(statistic))\n            : capitalize(t(statistic))}\n        </abbr>\n        {sortData.sortColumn === statistic && (\n          <div>\n            {sortData.isAscending && <TriangleUpIcon />}\n            {!sortData.isAscending && <TriangleDownIcon />}\n            <div />\n          </div>\n        )}\n      </div>\n    </td>\n  );\n}\n\nfunction PureDistrictRow({\n  stateCode,\n  districtName,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n}) {\n  const {t} = useTranslation();\n\n  const highlightDistrict = useCallback(() => {\n    if (regionHighlighted.districtName !== districtName) {\n      setRegionHighlighted(\n        produce(regionHighlighted, (draftRegionHighlighted) => {\n          draftRegionHighlighted.stateCode = stateCode;\n          draftRegionHighlighted.districtName = districtName;\n        })\n      );\n    }\n  }, [regionHighlighted, districtName, setRegionHighlighted, stateCode]);\n\n  return (\n    <tr\n      className={classnames('district', {\n        'is-highlighted': regionHighlighted?.districtName === districtName,\n      })}\n      onMouseEnter={highlightDistrict}\n    >\n      <td>\n        <div className=\"title-chevron\">\n          <span className=\"title-icon\">\n            {t(districtName)}\n            {data?.meta?.notes && (\n              <Tooltip\n                className=\"tooltip\"\n                aria-label={data.meta.notes}\n                wrap={true}\n                direction={'e'}\n                noDelay={true}\n                onClick={(e) => e.stopPropagation()}\n              >\n                <Icon.Info />\n              </Tooltip>\n            )}\n          </span>\n        </div>\n      </td>\n\n      {PRIMARY_STATISTICS.map((statistic) => (\n        <Cell key={statistic} {...{statistic}} data={data} />\n      ))}\n    </tr>\n  );\n}\n\nconst isDistrictRowEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    !equal(prevProps.data?.['last_updated'], currProps.data?.['last_updated'])\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n    (equal(prevProps.regionHighlighted.districtName, prevProps.districtName) ||\n      equal(currProps.regionHighlighted.districtName, currProps.districtName))\n  ) {\n    return false;\n  }\n  return true;\n};\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\n\nfunction Row({stateCode, data, regionHighlighted, setRegionHighlighted}) {\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\n    sortColumn: 'active',\n    isAscending: false,\n  });\n\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  const Chevron = useMemo(\n    () => (\n      <span\n        className={classnames(\n          'dropdown',\n          {rotateRightDown: showDistricts},\n          {rotateDownRight: !showDistricts}\n        )}\n      >\n        <Icon.ChevronDown />\n      </span>\n    ),\n    [showDistricts]\n  );\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      setSortData(\n        produce(sortData, (draftSortData) => {\n          draftSortData.isAscending = !sortData.isAscending;\n          draftSortData.sortColumn = statistic;\n        })\n      );\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (districtNameA, districtNameB) => {\n      if (sortData.sortColumn !== 'districtName') {\n        return sortData.isAscending\n          ? getStatistic(\n              data.districts[districtNameA],\n              'total',\n              sortData.sortColumn\n            ) -\n              getStatistic(\n                data.districts[districtNameB],\n                'total',\n                sortData.sortColumn\n              )\n          : getStatistic(\n              data.districts[districtNameB],\n              'total',\n              sortData.sortColumn\n            ) -\n              getStatistic(\n                data.districts[districtNameA],\n                'total',\n                sortData.sortColumn\n              );\n      } else {\n        return sortData.isAscending\n          ? districtNameA.localeCompare(districtNameB)\n          : districtNameB.localeCompare(districtNameA);\n      }\n    },\n    [sortData, data]\n  );\n\n  const highlightState = useCallback(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted(\n        produce(regionHighlighted, (draftRegionHighlighted) => {\n          draftRegionHighlighted.stateCode = stateCode;\n          draftRegionHighlighted.districtName = null;\n        })\n      );\n    }\n  }, [regionHighlighted, setRegionHighlighted, stateCode]);\n\n  const _setShowDistrict = useCallback(() => {\n    if (data.districts) {\n      setShowDistricts(!showDistricts);\n    }\n  }, [showDistricts, data]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={classnames(\n          'state',\n          {'is-total': stateCode === 'TT'},\n          {'is-highlighted': regionHighlighted?.stateCode === stateCode}\n        )}\n        onMouseEnter={highlightState}\n        onClick={_setShowDistrict}\n      >\n        <td>\n          <div className=\"title-chevron\">\n            {stateCode !== 'TT' && Chevron}\n            <span className=\"title-icon\">\n              {t(STATE_NAMES[stateCode])}\n\n              {data?.meta?.notes && (\n                <Tooltip\n                  className=\"tooltip\"\n                  aria-label={data.meta.notes}\n                  wrap={true}\n                  direction={'e'}\n                  noDelay={true}\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <InfoIcon size={'small'} />\n                </Tooltip>\n              )}\n            </span>\n          </div>\n        </td>\n\n        {PRIMARY_STATISTICS.map((statistic) => (\n          <Cell key={statistic} {...{data, statistic}} />\n        ))}\n      </tr>\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr className=\"is-spacer\">\n            <td colSpan={5}>\n              <p />\n            </td>\n          </tr>\n\n          <tr className={'state-last-update'}>\n            <td colSpan={4} style={{paddingBottom: 0}}>\n              <p className=\"spacer\"></p>\n              {data?.meta?.['last_updated'] && (\n                <p>\n                  {`Last updated ${formatLastUpdated(\n                    data.meta.last_updated\n                  )} ${t('ago')}`}\n                </p>\n              )}\n              {data.districts['Unknown'] && (\n                <div className=\"disclaimer\">\n                  <Icon.AlertCircle />\n                  {t('District-wise numbers are under reconciliation')}\n                </div>\n              )}\n            </td>\n            <td\n              align=\"center\"\n              className=\"state-page-link\"\n              colSpan={1}\n              style={{width: '1.5rem'}}\n              onClick={() => {\n                history.push(`state/${stateCode}`);\n              }}\n            >\n              {t('See more details on {{state}}', {\n                state: t(STATE_NAMES[stateCode]),\n              })}\n            </td>\n          </tr>\n\n          <tr className={classnames('district-heading')}>\n            <td onClick={() => handleSortClick('districtName')}>\n              <div className=\"heading-content\">\n                <abbr title=\"District\">{t('District')}</abbr>\n                {sortData.sortColumn === 'districtName' && (\n                  <div>\n                    {sortData.isAscending && <TriangleDownIcon />}\n                    {!sortData.isAscending && <TriangleUpIcon />}\n                  </div>\n                )}\n              </div>\n            </td>\n\n            {PRIMARY_STATISTICS.map((statistic) => (\n              <DistrictHeaderCell\n                key={statistic}\n                {...{statistic, sortData, handleSortClick}}\n              />\n            ))}\n          </tr>\n        </React.Fragment>\n      )}\n\n      {showDistricts &&\n        Object.keys(data.districts)\n          .sort((a, b) => sortingFunction(a, b))\n          .map((districtName) => (\n            <DistrictRow\n              key={districtName}\n              {...{\n                districtName,\n                regionHighlighted,\n                setRegionHighlighted,\n                stateCode,\n              }}\n              data={data.districts[districtName]}\n            />\n          ))}\n\n      {showDistricts && (\n        <tr className=\"is-spacer\">\n          <td colSpan={5}>\n            <p />\n          </td>\n        </tr>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    ) &&\n      equal(prevProps.regionHighlighted.stateCode, prevProps.stateCode)) ||\n    equal(currProps.regionHighlighted.stateCode, currProps.stateCode)\n  ) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n      equal(\n        prevProps.regionHighlighted.districtName,\n        prevProps.districtName\n      )) ||\n    equal(currProps.regionHighlighted.districtName, currProps.districtName)\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Row, isEqual);\n","import Row from './row';\n\nimport {PRIMARY_STATISTICS} from '../constants';\nimport {capitalize, abbreviate, getStatistic} from '../utils/commonfunctions';\n\nimport {TriangleUpIcon, TriangleDownIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTrail, animated, config} from 'react-spring';\nimport {createBreakpoint, useLocalStorage} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\n\nfunction PureStateHeaderCell({handleSort, sortData, statistic}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <th onClick={() => handleSort(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={capitalize(statistic)}\n        >\n          {breakpoint === 'S'\n            ? capitalize(statistic.slice(0, 1))\n            : breakpoint === 'L'\n            ? capitalize(abbreviate(statistic))\n            : capitalize(t(statistic))}\n        </abbr>\n        {sortData.sortColumn === statistic && (\n          <div>\n            {sortData.isAscending && <TriangleUpIcon />}\n            {!sortData.isAscending && <TriangleDownIcon />}\n            <div />\n          </div>\n        )}\n      </div>\n    </th>\n  );\n}\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst StateHeaderCell = React.memo(PureStateHeaderCell, isStateHeaderCellEqual);\n\nfunction PureFineprintTop() {\n  const {t} = useTranslation();\n\n  return (\n    <React.Fragment>\n      <h5 className=\"table-fineprint\">\n        {t('Compiled from State Govt. numbers')},{' '}\n        <Link to=\"/about\" style={{color: '#6c757d'}}>\n          {t('know more')}!\n        </Link>\n      </h5>\n    </React.Fragment>\n  );\n}\nconst FineprintTop = React.memo(PureFineprintTop);\n\nfunction Table({data, regionHighlighted, setRegionHighlighted}) {\n  const {t} = useTranslation();\n\n  const [sortData, setSortData] = useLocalStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      setSortData(\n        produce(sortData, (draftSortData) => {\n          draftSortData.isAscending = !sortData.isAscending;\n          draftSortData.sortColumn = statistic;\n        })\n      );\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (stateCodeA, stateCodeB) => {\n      if (sortData.sortColumn !== 'stateName') {\n        const statisticA = getStatistic(\n          data[stateCodeA],\n          'total',\n          sortData.sortColumn\n        );\n        const statisticB = getStatistic(\n          data[stateCodeB],\n          'total',\n          sortData.sortColumn\n        );\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        return sortData.isAscending\n          ? stateCodeA.localeCompare(stateCodeB)\n          : stateCodeB.localeCompare(stateCodeA);\n      }\n    },\n    [sortData, data]\n  );\n\n  const [trail, set] = useTrail(2, () => ({\n    transform: 'translate3d(0, 10px, 0)',\n    opacity: 0,\n    config: config.wobbly,\n  }));\n\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n  return (\n    <React.Fragment>\n      <animated.span style={trail[0]}>\n        <FineprintTop />\n      </animated.span>\n\n      <animated.table className=\"table\" style={trail[1]}>\n        <thead>\n          <tr>\n            <th\n              className=\"state-heading\"\n              onClick={() => handleSortClick('stateName')}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">{t('State/UT')}</abbr>\n                {sortData.sortColumn === 'stateName' && (\n                  <div>\n                    {sortData.isAscending && <TriangleDownIcon />}\n                    {!sortData.isAscending && <TriangleUpIcon />}\n                  </div>\n                )}\n              </div>\n            </th>\n            {PRIMARY_STATISTICS.map((statistic) => (\n              <StateHeaderCell\n                key={statistic}\n                {...{statistic, sortData}}\n                handleSort={() => {\n                  handleSortClick(statistic);\n                }}\n              />\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {Object.keys(data)\n            .filter(\n              (stateCode) =>\n                stateCode !== 'TT' && data[stateCode].total?.confirmed\n            )\n            .sort((a, b) => sortingFunction(a, b))\n            .map((stateCode) => {\n              return (\n                <Row\n                  key={stateCode}\n                  data={data[stateCode]}\n                  {...{stateCode, regionHighlighted, setRegionHighlighted}}\n                />\n              );\n            })}\n        </tbody>\n\n        <tbody>\n          <Row\n            key={'TT'}\n            data={data['TT']}\n            stateCode={'TT'}\n            {...{regionHighlighted, setRegionHighlighted}}\n          />\n        </tbody>\n      </animated.table>\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data['TT'].total.confirmed,\n      currProps.data['TT'].total.confirmed\n    )\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Table, isEqual);\n","import produce from 'immer';\nimport {useState} from 'react';\nimport {useUpdateEffect} from 'react-use';\nimport useSWR from 'swr';\n\nexport function useStickySWR(key, fetcher, swrOptions, ...args) {\n  const [options, setOptions] = useState(swrOptions);\n\n  const {data, isValidating, error, ...rest} = useSWR(\n    key,\n    fetcher,\n    options,\n    ...args\n  );\n\n  useUpdateEffect(() => {\n    setOptions(\n      produce(options, (draftOptions) => {\n        draftOptions.initialData = data;\n      })\n    );\n  }, [data]);\n\n  return {\n    ...rest,\n    isValidating,\n    error,\n    data,\n  };\n}\n\nexport default useStickySWR;\n","import Actions from './actions';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport Search from './search';\nimport Table from './table';\nimport TimeSeriesExplorer from './timeseriesexplorer';\n\nimport 'intersection-observer';\n\nimport {MAP_META} from '../constants';\nimport useStickySWR from '../hooks/usestickyswr';\nimport {fetcher} from '../utils/commonfunctions';\n\nimport React, {useState, useRef} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useIsVisible} from 'react-is-visible';\n\nfunction Home(props) {\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: 'TT',\n    districtName: null,\n  });\n\n  const [anchor, setAnchor] = useState(null);\n  const [mapStatistic, setMapStatistic] = useState('confirmed');\n\n  const [date, setDate] = useState('');\n\n  const {data: timeseries} = useStickySWR(\n    'https://api.covid19india.org/v3/min/timeseries.min.json',\n    fetcher,\n    {\n      revalidateOnFocus: false,\n    }\n  );\n\n  const {data} = useStickySWR(\n    `https://api.covid19india.org/v3/min/data${\n      date ? `-${date}` : ''\n    }.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n      revalidateOnFocus: false,\n    }\n  );\n\n  const homeRightElement = useRef();\n  const isVisible = useIsVisible(homeRightElement, {once: true});\n\n  const stateCodes = [\n    'TT',\n    ...[\n      ...new Set([\n        ...Object.keys(MAP_META).filter((stateCode) => stateCode !== 'TT'),\n        ...Object.keys(data || {}).filter((stateCode) => stateCode !== 'TT'),\n      ]),\n    ].sort(),\n  ];\n\n  return (\n    <React.Fragment>\n      {data && timeseries && (\n        <div className=\"Home\">\n          <Helmet>\n            <title>Coronavirus Outbreak in India - covid19india.org</title>\n            <meta\n              name=\"title\"\n              content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\n            />\n          </Helmet>\n\n          <div className=\"home-left\">\n            <div className=\"header\">\n              <Search />\n\n              <Actions\n                {...{\n                  setDate,\n                  dates: Object.keys(timeseries['TT']).reverse(),\n                  date,\n                }}\n              />\n            </div>\n\n            <Level data={data['TT']} />\n            <Minigraph timeseries={timeseries['TT']} {...{date}} />\n            <Table {...{data, regionHighlighted, setRegionHighlighted}} />\n          </div>\n\n          <div className=\"home-right\" ref={homeRightElement}>\n            {isVisible && (\n              <React.Fragment>\n                <MapExplorer\n                  stateCode=\"TT\"\n                  {...{data}}\n                  {...{mapStatistic, setMapStatistic}}\n                  {...{regionHighlighted, setRegionHighlighted}}\n                  {...{anchor, setAnchor}}\n                />\n\n                <TimeSeriesExplorer\n                  timeseries={timeseries[regionHighlighted.stateCode]}\n                  {...{date, stateCodes}}\n                  {...{regionHighlighted, setRegionHighlighted}}\n                  {...{anchor, setAnchor}}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      )}\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}